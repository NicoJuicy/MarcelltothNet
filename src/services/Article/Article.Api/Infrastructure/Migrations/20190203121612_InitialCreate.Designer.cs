// <auto-generated />
using System;
using MarcellTothNet.Services.Article.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarcellTothNet.Services.Article.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ArticleContext))]
    [Migration("20190203121612_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.EntityFrameworkHiLoSequence", "'EntityFrameworkHiLoSequence', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarcellTothNet.Services.Article.Domain.TagAggregate.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<bool>("IsArchived");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTimeOffset>("PublishTime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(240);

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleTagModel", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("TagId");

                    b.HasKey("ArticleId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("Article2Tag");
                });

            modelBuilder.Entity("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleModel", b =>
                {
                    b.OwnsOne("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ImageReferenceModel", "Thumbnail", b1 =>
                        {
                            b1.Property<int>("ArticleModelId");

                            b1.Property<string>("AltText")
                                .IsRequired()
                                .HasMaxLength(512);

                            b1.Property<string>("Location")
                                .IsRequired()
                                .HasMaxLength(512);

                            b1.HasKey("ArticleModelId");

                            b1.ToTable("Articles");

                            b1.HasOne("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleModel")
                                .WithOne("Thumbnail")
                                .HasForeignKey("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ImageReferenceModel", "ArticleModelId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleTagModel", b =>
                {
                    b.HasOne("MarcellTothNet.Services.Article.Infrastructure.PersistenceModels.ArticleModel", "Article")
                        .WithMany("ArticleTags")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MarcellTothNet.Services.Article.Domain.TagAggregate.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
